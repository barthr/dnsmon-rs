// SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause)
//
// THIS FILE IS AUTOGENERATED BY CARGO-LIBBPF-GEN!

pub use self::imp::*;

#[allow(dead_code)]
#[allow(non_snake_case)]
#[allow(non_camel_case_types)]
#[allow(clippy::transmute_ptr_to_ref)]
#[allow(clippy::upper_case_acronyms)]
#[warn(single_use_lifetimes)]
mod imp {
    use libbpf_rs::libbpf_sys;
    use libbpf_rs::skel::OpenSkel;
    use libbpf_rs::skel::Skel;
    use libbpf_rs::skel::SkelBuilder;

    fn build_skel_config(
    ) -> libbpf_rs::Result<libbpf_rs::__internal_skel::ObjectSkeletonConfig<'static>> {
        let mut builder = libbpf_rs::__internal_skel::ObjectSkeletonConfigBuilder::new(DATA);
        builder
            .name("dns_bpf")
            .map("dns_bpf.rodata", false)
            .prog("dns");

        builder.build()
    }

    #[derive(Default)]
    pub struct DnsSkelBuilder {
        pub obj_builder: libbpf_rs::ObjectBuilder,
    }

    impl<'a> SkelBuilder<'a> for DnsSkelBuilder {
        type Output = OpenDnsSkel<'a>;
        fn open(self) -> libbpf_rs::Result<OpenDnsSkel<'a>> {
            let opts = *self.obj_builder.opts();
            self.open_opts(opts)
        }

        fn open_opts(
            self,
            open_opts: libbpf_sys::bpf_object_open_opts,
        ) -> libbpf_rs::Result<OpenDnsSkel<'a>> {
            let mut skel_config = build_skel_config()?;

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::from_raw_os_error(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            #[allow(unused_mut)]
            let mut skel = OpenDnsSkel {
                obj,
                // SAFETY: Our `struct_ops` type contains only pointers,
                //         which are allowed to be NULL.
                // TODO: Generate and use a `Default` representation
                //       instead, to cut down on unsafe code.
                struct_ops: unsafe { std::mem::zeroed() },
                skel_config,
            };

            Ok(skel)
        }

        fn object_builder(&self) -> &libbpf_rs::ObjectBuilder {
            &self.obj_builder
        }
        fn object_builder_mut(&mut self) -> &mut libbpf_rs::ObjectBuilder {
            &mut self.obj_builder
        }
    }

    pub struct OpenDnsMapsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenDnsMapsMut<'_> {
        pub fn rodata(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("dns_bpf.rodata").unwrap()
        }
    }

    pub struct OpenDnsMaps<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenDnsMaps<'_> {
        pub fn rodata(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("dns_bpf.rodata").unwrap()
        }
    }

    pub struct OpenDnsProgs<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenDnsProgs<'_> {
        pub fn dns(&self) -> &libbpf_rs::OpenProgram {
            self.inner.prog("dns").unwrap()
        }
    }

    pub struct OpenDnsProgsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenDnsProgsMut<'_> {
        pub fn dns(&mut self) -> &mut libbpf_rs::OpenProgram {
            self.inner.prog_mut("dns").unwrap()
        }
    }

    pub mod dns_types {
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct rodata {}

        #[derive(Debug, Clone)]
        #[repr(C)]
        pub struct struct_ops {}

        impl struct_ops {}
    }

    pub struct OpenDnsSkel<'a> {
        pub obj: libbpf_rs::OpenObject,
        pub struct_ops: dns_types::struct_ops,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
    }

    impl<'a> OpenSkel for OpenDnsSkel<'a> {
        type Output = DnsSkel<'a>;
        fn load(mut self) -> libbpf_rs::Result<DnsSkel<'a>> {
            let ret = unsafe { libbpf_sys::bpf_object__load_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::from_raw_os_error(-ret));
            }

            let obj = unsafe { libbpf_rs::Object::from_ptr(self.obj.take_ptr())? };

            Ok(DnsSkel {
                obj,
                struct_ops: self.struct_ops,
                skel_config: self.skel_config,
                links: DnsLinks::default(),
            })
        }

        fn open_object(&self) -> &libbpf_rs::OpenObject {
            &self.obj
        }

        fn open_object_mut(&mut self) -> &mut libbpf_rs::OpenObject {
            &mut self.obj
        }
    }
    impl OpenDnsSkel<'_> {
        pub fn progs_mut(&mut self) -> OpenDnsProgsMut<'_> {
            OpenDnsProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn progs(&self) -> OpenDnsProgs<'_> {
            OpenDnsProgs { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> OpenDnsMapsMut<'_> {
            OpenDnsMapsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> OpenDnsMaps<'_> {
            OpenDnsMaps { inner: &self.obj }
        }
    }

    pub struct DnsMapsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl DnsMapsMut<'_> {
        pub fn rodata(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("dns_bpf.rodata").unwrap()
        }
    }

    pub struct DnsMaps<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl DnsMaps<'_> {
        pub fn rodata(&self) -> &libbpf_rs::Map {
            self.inner.map("dns_bpf.rodata").unwrap()
        }
    }

    pub struct DnsProgs<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl DnsProgs<'_> {
        pub fn dns(&self) -> &libbpf_rs::Program {
            self.inner.prog("dns").unwrap()
        }
    }

    pub struct DnsProgsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl DnsProgsMut<'_> {
        pub fn dns(&mut self) -> &mut libbpf_rs::Program {
            self.inner.prog_mut("dns").unwrap()
        }
    }

    #[derive(Default)]
    pub struct DnsLinks {
        pub dns: Option<libbpf_rs::Link>,
    }

    pub struct DnsSkel<'a> {
        pub obj: libbpf_rs::Object,
        struct_ops: dns_types::struct_ops,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
        pub links: DnsLinks,
    }

    unsafe impl Send for DnsSkel<'_> {}
    unsafe impl Sync for DnsSkel<'_> {}

    impl Skel for DnsSkel<'_> {
        fn object(&self) -> &libbpf_rs::Object {
            &self.obj
        }

        fn object_mut(&mut self) -> &mut libbpf_rs::Object {
            &mut self.obj
        }

        fn attach(&mut self) -> libbpf_rs::Result<()> {
            let ret = unsafe { libbpf_sys::bpf_object__attach_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::from_raw_os_error(-ret));
            }

            self.links = DnsLinks {
                dns: core::ptr::NonNull::new(self.skel_config.prog_link_ptr(0)?)
                    .map(|ptr| unsafe { libbpf_rs::Link::from_ptr(ptr) }),
            };

            Ok(())
        }
    }
    impl DnsSkel<'_> {
        pub fn progs_mut(&mut self) -> DnsProgsMut<'_> {
            DnsProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn progs(&self) -> DnsProgs<'_> {
            DnsProgs { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> DnsMapsMut<'_> {
            DnsMapsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> DnsMaps<'_> {
            DnsMaps { inner: &self.obj }
        }

        pub fn struct_ops_raw(&self) -> *const dns_types::struct_ops {
            &self.struct_ops
        }

        pub fn struct_ops(&self) -> &dns_types::struct_ops {
            &self.struct_ops
        }
    }

    const DATA: &[u8] = &[
        127, 69, 76, 70, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 247, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
        0, 64, 0, 9, 0, 1, 0, 0, 46, 115, 116, 114, 116, 97, 98, 0, 46, 115, 121, 109, 116, 97, 98,
        0, 116, 99, 0, 108, 105, 99, 101, 110, 115, 101, 0, 46, 114, 111, 100, 97, 116, 97, 0, 100,
        110, 115, 46, 98, 112, 102, 46, 99, 0, 76, 66, 66, 48, 95, 49, 48, 0, 100, 110, 115, 46,
        95, 95, 95, 95, 102, 109, 116, 0, 100, 110, 115, 0, 76, 73, 67, 69, 78, 83, 69, 0, 46, 114,
        101, 108, 116, 99, 0, 46, 66, 84, 70, 0, 46, 66, 84, 70, 46, 101, 120, 116, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 4,
        0, 241, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 3, 0, 200, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
        0, 18, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 17, 0, 4, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 97, 18, 80, 0, 0, 0, 0, 0, 97, 17, 76, 0,
        0, 0, 0, 0, 21, 1, 22, 0, 0, 0, 0, 0, 191, 20, 0, 0, 0, 0, 0, 0, 7, 4, 0, 0, 14, 0, 0, 0,
        45, 36, 19, 0, 0, 0, 0, 0, 105, 19, 12, 0, 0, 0, 0, 0, 85, 3, 17, 0, 8, 0, 0, 0, 21, 4, 16,
        0, 0, 0, 0, 0, 191, 19, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 34, 0, 0, 0, 45, 35, 13, 0, 0, 0, 0,
        0, 113, 68, 9, 0, 0, 0, 0, 0, 85, 4, 11, 0, 17, 0, 0, 0, 7, 1, 0, 0, 42, 0, 0, 0, 45, 33,
        9, 0, 0, 0, 0, 0, 21, 3, 8, 0, 0, 0, 0, 0, 105, 49, 0, 0, 0, 0, 0, 0, 85, 1, 6, 0, 0, 53,
        0, 0, 105, 51, 0, 0, 0, 0, 0, 0, 220, 3, 0, 0, 16, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 34, 0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 183, 0, 0, 0, 0, 0,
        0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 71, 80, 76, 0, 82, 101, 99, 101, 105, 118, 101, 100, 32,
        85, 68, 80, 32, 112, 97, 99, 107, 101, 116, 32, 119, 105, 116, 104, 32, 112, 111, 114, 116,
        32, 37, 100, 33, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 159, 235, 1, 0,
        24, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 171, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
        0, 0, 0, 1, 0, 0, 0, 34, 0, 0, 4, 192, 0, 0, 0, 11, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 15, 0,
        0, 0, 3, 0, 0, 0, 32, 0, 0, 0, 24, 0, 0, 0, 3, 0, 0, 0, 64, 0, 0, 0, 29, 0, 0, 0, 3, 0, 0,
        0, 96, 0, 0, 0, 43, 0, 0, 0, 3, 0, 0, 0, 128, 0, 0, 0, 52, 0, 0, 0, 3, 0, 0, 0, 160, 0, 0,
        0, 65, 0, 0, 0, 3, 0, 0, 0, 192, 0, 0, 0, 74, 0, 0, 0, 3, 0, 0, 0, 224, 0, 0, 0, 85, 0, 0,
        0, 3, 0, 0, 0, 0, 1, 0, 0, 94, 0, 0, 0, 3, 0, 0, 0, 32, 1, 0, 0, 110, 0, 0, 0, 3, 0, 0, 0,
        64, 1, 0, 0, 118, 0, 0, 0, 3, 0, 0, 0, 96, 1, 0, 0, 127, 0, 0, 0, 5, 0, 0, 0, 128, 1, 0, 0,
        130, 0, 0, 0, 3, 0, 0, 0, 32, 2, 0, 0, 135, 0, 0, 0, 3, 0, 0, 0, 64, 2, 0, 0, 146, 0, 0, 0,
        3, 0, 0, 0, 96, 2, 0, 0, 151, 0, 0, 0, 3, 0, 0, 0, 128, 2, 0, 0, 160, 0, 0, 0, 3, 0, 0, 0,
        160, 2, 0, 0, 168, 0, 0, 0, 3, 0, 0, 0, 192, 2, 0, 0, 175, 0, 0, 0, 3, 0, 0, 0, 224, 2, 0,
        0, 186, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 196, 0, 0, 0, 7, 0, 0, 0, 32, 3, 0, 0, 207, 0, 0,
        0, 7, 0, 0, 0, 160, 3, 0, 0, 217, 0, 0, 0, 3, 0, 0, 0, 32, 4, 0, 0, 229, 0, 0, 0, 3, 0, 0,
        0, 64, 4, 0, 0, 240, 0, 0, 0, 3, 0, 0, 0, 96, 4, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 128, 4, 0,
        0, 250, 0, 0, 0, 10, 0, 0, 0, 192, 4, 0, 0, 1, 1, 0, 0, 3, 0, 0, 0, 0, 5, 0, 0, 10, 1, 0,
        0, 3, 0, 0, 0, 32, 5, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 64, 5, 0, 0, 19, 1, 0, 0, 3, 0, 0, 0,
        128, 5, 0, 0, 28, 1, 0, 0, 14, 0, 0, 0, 160, 5, 0, 0, 40, 1, 0, 0, 10, 0, 0, 0, 192, 5, 0,
        0, 49, 1, 0, 0, 0, 0, 0, 8, 4, 0, 0, 0, 55, 1, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 68, 1, 0, 0, 0, 0,
        0, 1, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0,
        4, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 8, 0, 0, 0, 88, 1, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 2, 36, 0, 0, 0, 98, 1, 0, 0, 0, 0, 0, 8, 11, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0,
        1, 8, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 8, 0, 0, 0, 123, 1, 0, 0, 13, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 37, 0, 0, 0, 126, 1, 0, 0, 0, 0, 0, 8, 15, 0, 0, 0,
        131, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 13, 17, 0, 0, 0,
        145, 1, 0, 0, 1, 0, 0, 0, 149, 1, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 1, 153, 1, 0, 0,
        1, 0, 0, 12, 16, 0, 0, 0, 157, 1, 0, 0, 3, 0, 0, 4, 14, 0, 0, 0, 164, 1, 0, 0, 20, 0, 0, 0,
        0, 0, 0, 0, 171, 1, 0, 0, 20, 0, 0, 0, 48, 0, 0, 0, 180, 1, 0, 0, 21, 0, 0, 0, 96, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 15, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 188, 1, 0, 0, 0,
        0, 0, 8, 22, 0, 0, 0, 195, 1, 0, 0, 0, 0, 0, 8, 23, 0, 0, 0, 201, 1, 0, 0, 0, 0, 0, 1, 2,
        0, 0, 0, 16, 0, 0, 0, 216, 1, 0, 0, 10, 0, 0, 132, 20, 0, 0, 0, 222, 1, 0, 0, 14, 0, 0, 0,
        0, 0, 0, 4, 226, 1, 0, 0, 14, 0, 0, 0, 4, 0, 0, 4, 234, 1, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0,
        238, 1, 0, 0, 21, 0, 0, 0, 16, 0, 0, 0, 246, 1, 0, 0, 21, 0, 0, 0, 32, 0, 0, 0, 249, 1, 0,
        0, 21, 0, 0, 0, 48, 0, 0, 0, 2, 2, 0, 0, 14, 0, 0, 0, 64, 0, 0, 0, 43, 0, 0, 0, 14, 0, 0,
        0, 72, 0, 0, 0, 6, 2, 0, 0, 25, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 96, 0, 0, 0,
        12, 2, 0, 0, 0, 0, 0, 8, 22, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 5, 8, 0, 0, 0, 0, 0, 0, 0, 27,
        0, 0, 0, 0, 0, 0, 0, 20, 2, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 4, 8, 0, 0,
        0, 26, 2, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 32, 2, 0, 0, 28, 0, 0, 0, 32, 0, 0, 0, 38, 2, 0,
        0, 0, 0, 0, 8, 3, 0, 0, 0, 45, 2, 0, 0, 4, 0, 0, 4, 8, 0, 0, 0, 52, 2, 0, 0, 21, 0, 0, 0,
        0, 0, 0, 0, 59, 2, 0, 0, 21, 0, 0, 0, 16, 0, 0, 0, 11, 0, 0, 0, 21, 0, 0, 0, 32, 0, 0, 0,
        6, 2, 0, 0, 25, 0, 0, 0, 48, 0, 0, 0, 64, 2, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 30, 0, 0, 0, 6, 0, 0, 0, 4, 0, 0, 0, 69, 2, 0, 0, 0, 0, 0,
        14, 31, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
        0, 0, 0, 0, 33, 0, 0, 0, 6, 0, 0, 0, 34, 0, 0, 0, 77, 2, 0, 0, 0, 0, 0, 14, 34, 0, 0, 0, 0,
        0, 0, 0, 89, 2, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 103, 2, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 152, 4,
        0, 0, 1, 0, 0, 15, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 160, 4, 0, 0, 1, 0, 0,
        15, 34, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 95, 95, 115, 107, 95, 98, 117,
        102, 102, 0, 108, 101, 110, 0, 112, 107, 116, 95, 116, 121, 112, 101, 0, 109, 97, 114, 107,
        0, 113, 117, 101, 117, 101, 95, 109, 97, 112, 112, 105, 110, 103, 0, 112, 114, 111, 116,
        111, 99, 111, 108, 0, 118, 108, 97, 110, 95, 112, 114, 101, 115, 101, 110, 116, 0, 118,
        108, 97, 110, 95, 116, 99, 105, 0, 118, 108, 97, 110, 95, 112, 114, 111, 116, 111, 0, 112,
        114, 105, 111, 114, 105, 116, 121, 0, 105, 110, 103, 114, 101, 115, 115, 95, 105, 102, 105,
        110, 100, 101, 120, 0, 105, 102, 105, 110, 100, 101, 120, 0, 116, 99, 95, 105, 110, 100,
        101, 120, 0, 99, 98, 0, 104, 97, 115, 104, 0, 116, 99, 95, 99, 108, 97, 115, 115, 105, 100,
        0, 100, 97, 116, 97, 0, 100, 97, 116, 97, 95, 101, 110, 100, 0, 110, 97, 112, 105, 95, 105,
        100, 0, 102, 97, 109, 105, 108, 121, 0, 114, 101, 109, 111, 116, 101, 95, 105, 112, 52, 0,
        108, 111, 99, 97, 108, 95, 105, 112, 52, 0, 114, 101, 109, 111, 116, 101, 95, 105, 112, 54,
        0, 108, 111, 99, 97, 108, 95, 105, 112, 54, 0, 114, 101, 109, 111, 116, 101, 95, 112, 111,
        114, 116, 0, 108, 111, 99, 97, 108, 95, 112, 111, 114, 116, 0, 100, 97, 116, 97, 95, 109,
        101, 116, 97, 0, 116, 115, 116, 97, 109, 112, 0, 119, 105, 114, 101, 95, 108, 101, 110, 0,
        103, 115, 111, 95, 115, 101, 103, 115, 0, 103, 115, 111, 95, 115, 105, 122, 101, 0, 116,
        115, 116, 97, 109, 112, 95, 116, 121, 112, 101, 0, 104, 119, 116, 115, 116, 97, 109, 112,
        0, 95, 95, 117, 51, 50, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0,
        95, 95, 65, 82, 82, 65, 89, 95, 83, 73, 90, 69, 95, 84, 89, 80, 69, 95, 95, 0, 102, 108,
        111, 119, 95, 107, 101, 121, 115, 0, 95, 95, 117, 54, 52, 0, 117, 110, 115, 105, 103, 110,
        101, 100, 32, 108, 111, 110, 103, 32, 108, 111, 110, 103, 0, 115, 107, 0, 95, 95, 117, 56,
        0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 115, 107, 98, 0, 105,
        110, 116, 0, 100, 110, 115, 0, 101, 116, 104, 104, 100, 114, 0, 104, 95, 100, 101, 115,
        116, 0, 104, 95, 115, 111, 117, 114, 99, 101, 0, 104, 95, 112, 114, 111, 116, 111, 0, 95,
        95, 98, 101, 49, 54, 0, 95, 95, 117, 49, 54, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32,
        115, 104, 111, 114, 116, 0, 105, 112, 104, 100, 114, 0, 105, 104, 108, 0, 118, 101, 114,
        115, 105, 111, 110, 0, 116, 111, 115, 0, 116, 111, 116, 95, 108, 101, 110, 0, 105, 100, 0,
        102, 114, 97, 103, 95, 111, 102, 102, 0, 116, 116, 108, 0, 99, 104, 101, 99, 107, 0, 95,
        95, 115, 117, 109, 49, 54, 0, 97, 100, 100, 114, 115, 0, 115, 97, 100, 100, 114, 0, 100,
        97, 100, 100, 114, 0, 95, 95, 98, 101, 51, 50, 0, 117, 100, 112, 104, 100, 114, 0, 115,
        111, 117, 114, 99, 101, 0, 100, 101, 115, 116, 0, 99, 104, 97, 114, 0, 76, 73, 67, 69, 78,
        83, 69, 0, 100, 110, 115, 46, 95, 95, 95, 95, 102, 109, 116, 0, 98, 112, 102, 95, 102, 108,
        111, 119, 95, 107, 101, 121, 115, 0, 98, 112, 102, 95, 115, 111, 99, 107, 0, 47, 104, 111,
        109, 101, 47, 98, 97, 114, 116, 47, 80, 114, 111, 106, 101, 99, 116, 115, 47, 100, 110,
        115, 109, 111, 110, 45, 114, 115, 47, 115, 114, 99, 47, 98, 112, 102, 47, 99, 117, 114,
        115, 111, 114, 46, 104, 0, 32, 32, 32, 32, 32, 32, 32, 32, 46, 101, 110, 100, 32, 61, 32,
        40, 118, 111, 105, 100, 42, 41, 40, 108, 111, 110, 103, 41, 98, 117, 102, 102, 45, 62, 100,
        97, 116, 97, 95, 101, 110, 100, 44, 0, 32, 32, 32, 32, 32, 32, 32, 32, 46, 112, 111, 115,
        32, 61, 32, 40, 118, 111, 105, 100, 42, 41, 40, 108, 111, 110, 103, 41, 98, 117, 102, 102,
        45, 62, 100, 97, 116, 97, 44, 0, 47, 104, 111, 109, 101, 47, 98, 97, 114, 116, 47, 80, 114,
        111, 106, 101, 99, 116, 115, 47, 100, 110, 115, 109, 111, 110, 45, 114, 115, 47, 115, 114,
        99, 47, 98, 112, 102, 47, 112, 97, 114, 115, 101, 114, 115, 46, 99, 0, 80, 65, 82, 83, 69,
        95, 70, 85, 78, 67, 95, 68, 69, 67, 76, 65, 82, 65, 84, 73, 79, 78, 40, 101, 116, 104, 104,
        100, 114, 41, 0, 47, 104, 111, 109, 101, 47, 98, 97, 114, 116, 47, 80, 114, 111, 106, 101,
        99, 116, 115, 47, 100, 110, 115, 109, 111, 110, 45, 114, 115, 47, 115, 114, 99, 47, 98,
        112, 102, 47, 100, 110, 115, 46, 98, 112, 102, 46, 99, 0, 32, 32, 32, 32, 105, 102, 32, 40,
        98, 112, 102, 95, 110, 116, 111, 104, 115, 40, 101, 116, 104, 104, 100, 114, 45, 62, 104,
        95, 112, 114, 111, 116, 111, 41, 32, 33, 61, 32, 73, 80, 86, 52, 41, 32, 123, 0, 80, 65,
        82, 83, 69, 95, 70, 85, 78, 67, 95, 68, 69, 67, 76, 65, 82, 65, 84, 73, 79, 78, 40, 105,
        112, 104, 100, 114, 41, 0, 32, 32, 32, 32, 95, 95, 117, 56, 32, 112, 114, 111, 116, 111,
        99, 111, 108, 32, 61, 32, 105, 112, 45, 62, 112, 114, 111, 116, 111, 99, 111, 108, 59, 0,
        32, 32, 32, 32, 105, 102, 32, 40, 112, 114, 111, 116, 111, 99, 111, 108, 32, 33, 61, 32,
        85, 68, 80, 95, 80, 82, 79, 84, 79, 41, 32, 123, 0, 32, 32, 32, 32, 105, 102, 32, 40, 98,
        112, 102, 95, 110, 116, 111, 104, 115, 40, 117, 100, 112, 45, 62, 115, 111, 117, 114, 99,
        101, 41, 32, 61, 61, 32, 53, 51, 41, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 100, 101,
        98, 117, 103, 95, 98, 112, 102, 95, 112, 114, 105, 110, 116, 107, 40, 34, 82, 101, 99, 101,
        105, 118, 101, 100, 32, 85, 68, 80, 32, 112, 97, 99, 107, 101, 116, 32, 119, 105, 116, 104,
        32, 112, 111, 114, 116, 32, 37, 100, 33, 34, 44, 32, 98, 112, 102, 95, 110, 116, 111, 104,
        115, 40, 117, 100, 112, 45, 62, 115, 111, 117, 114, 99, 101, 41, 41, 59, 0, 125, 0, 48, 58,
        49, 54, 0, 48, 58, 49, 53, 0, 48, 58, 50, 0, 48, 58, 55, 0, 48, 58, 48, 0, 108, 105, 99,
        101, 110, 115, 101, 0, 46, 114, 111, 100, 97, 116, 97, 0, 116, 99, 0, 0, 0, 0, 0, 0, 159,
        235, 1, 0, 32, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 204, 0, 0, 0, 224, 0, 0, 0,
        108, 0, 0, 0, 8, 0, 0, 0, 168, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 16, 0, 0, 0,
        168, 4, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 112, 2, 0, 0, 159, 2, 0, 0, 35, 92, 0, 0, 8, 0, 0,
        0, 112, 2, 0, 0, 203, 2, 0, 0, 35, 96, 0, 0, 16, 0, 0, 0, 243, 2, 0, 0, 35, 3, 0, 0, 1, 84,
        0, 0, 48, 0, 0, 0, 66, 3, 0, 0, 114, 3, 0, 0, 9, 104, 0, 0, 56, 0, 0, 0, 66, 3, 0, 0, 114,
        3, 0, 0, 9, 104, 0, 0, 64, 0, 0, 0, 243, 2, 0, 0, 160, 3, 0, 0, 1, 88, 0, 0, 96, 0, 0, 0,
        66, 3, 0, 0, 190, 3, 0, 0, 25, 140, 0, 0, 104, 0, 0, 0, 66, 3, 0, 0, 224, 3, 0, 0, 9, 144,
        0, 0, 136, 0, 0, 0, 66, 3, 0, 0, 1, 4, 0, 0, 9, 180, 0, 0, 144, 0, 0, 0, 66, 3, 0, 0, 1, 4,
        0, 0, 9, 180, 0, 0, 152, 0, 0, 0, 66, 3, 0, 0, 41, 4, 0, 0, 9, 184, 0, 0, 200, 0, 0, 0, 66,
        3, 0, 0, 128, 4, 0, 0, 1, 200, 0, 0, 16, 0, 0, 0, 168, 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 2,
        0, 0, 0, 130, 4, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 0, 0, 135, 4, 0, 0, 0, 0, 0, 0, 48, 0,
        0, 0, 19, 0, 0, 0, 140, 4, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 24, 0, 0, 0, 144, 4, 0, 0, 0, 0,
        0, 0, 136, 0, 0, 0, 29, 0, 0, 0, 148, 4, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 29, 0, 0, 0, 148,
        4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0,
        0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 0, 0, 216, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20,
        0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 2, 0, 0, 0, 0, 0,
        0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 28, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 2, 0,
        0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 9, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 104, 2, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0,
        0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 120, 2, 0, 0, 0, 0, 0, 0, 195, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 12, 0, 0, 0, 0, 0, 0, 108, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
}
